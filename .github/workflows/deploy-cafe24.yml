name: Deploy to Cafe24

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # ÏΩîÎìú ÌíàÏßà Í≤ÄÏÇ¨
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, sqlite3

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run Code Quality Check
        run: php scripts/code_quality_check.php

  # ÌÖåÏä§Ìä∏ Ïã§Ìñâ
  test:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, sqlite3

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create test database
        run: |
          mkdir -p tests/database
          touch tests/database/test.sqlite

      - name: Run tests
        run: php scripts/test_suite.php

  # Î≥¥Ïïà Í≤ÄÏÇ¨
  security:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Security Checker
        run: |
          if [ -f "vendor/bin/security-checker" ]; then
            vendor/bin/security-checker security:check composer.lock || echo "Security check skipped"
          else
            echo "Security Checker not available, skipping security check"
          fi

  # Î∞∞Ìè¨ Ìå®ÌÇ§ÏßÄ ÏÉùÏÑ±
  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --prefer-dist --no-dev --optimize-autoloader

      - name: Create production config
        run: |
          # ÌîÑÎ°úÎçïÏÖò ÏÑ§Ï†ï ÌååÏùº ÏÉùÏÑ±
          cp system/includes/config.php system/includes/config.prod.php
          sed -i 's/development/production/g' system/includes/config.prod.php
          sed -i 's/APP_DEBUG.*true/APP_DEBUG", false/g' system/includes/config.prod.php

      - name: Remove development files
        run: |
          # Í∞úÎ∞úÏö© ÌååÏùº Ï†úÍ±∞
          rm -f db_check.php
          rm -f db_setup.php
          rm -f debug.php
          rm -f test.php
          rm -rf tests/
          rm -rf .github/
          rm -f composer.*
          rm -f phpunit.xml
          rm -f *.md
          rm -rf .cursor/

      - name: Create deployment package
        run: |
          # Î∞∞Ìè¨Ïö© ÏïïÏ∂ï ÌååÏùº ÏÉùÏÑ± (Îçî ÏïàÏ†ïÏ†ÅÏù∏ Î∞©Î≤ï)
          echo "Creating deployment package..."
          
          # ÏûÑÏãú ÎîîÎ†âÌÜ†Î¶¨ ÏÉùÏÑ±
          mkdir -p temp-deploy
          
          # ÌïÑÏöîÌïú ÌååÏùºÎì§Îßå Î≥µÏÇ¨ (Ïò§Î•ò Ï≤òÎ¶¨ Ìè¨Ìï®)
          for dir in system modules resources api scripts config lib docs; do
            if [ -d "$dir" ]; then
              echo "Copying $dir..."
              cp -r "$dir" temp-deploy/ || echo "Warning: Failed to copy $dir"
            fi
          done
          
          # Í∞úÎ≥Ñ ÌååÏùº Î≥µÏÇ¨
          for file in index.php favicon.ico LICENSE; do
            if [ -f "$file" ]; then
              echo "Copying $file..."
              cp "$file" temp-deploy/ || echo "Warning: Failed to copy $file"
            fi
          done
          
          # Í∞úÎ∞úÏö© ÌååÏùº Ï†úÍ±∞
          echo "Removing development files..."
          rm -f temp-deploy/db_check.php
          rm -f temp-deploy/db_setup.php
          rm -f temp-deploy/debug.php
          rm -f temp-deploy/test.php
          rm -rf temp-deploy/tests/
          rm -rf temp-deploy/.github/
          rm -f temp-deploy/composer.*
          rm -f temp-deploy/phpunit.xml
          rm -f temp-deploy/*.md
          rm -rf temp-deploy/.cursor/
          
          # ÏïïÏ∂ï ÌååÏùº ÏÉùÏÑ±
          echo "Creating tar.gz file..."
          cd temp-deploy
          tar -czf ../mp-deployment.tar.gz . || {
            echo "Error: Failed to create tar.gz file"
            exit 1
          }
          cd ..
          
          # ÏûÑÏãú ÎîîÎ†âÌÜ†Î¶¨ Ï†ïÎ¶¨
          rm -rf temp-deploy
          
          echo "Deployment package created successfully"
          ls -la mp-deployment.tar.gz
          
          # ÌååÏùº ÌÅ¨Í∏∞ ÌôïÏù∏
          if [ -f "mp-deployment.tar.gz" ]; then
            size=$(stat -c%s mp-deployment.tar.gz 2>/dev/null || stat -f%z mp-deployment.tar.gz 2>/dev/null || echo "unknown")
            echo "Package size: $size bytes"
          else
            echo "Error: Package file not created"
            exit 1
          fi

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: mp-deployment
          path: mp-deployment.tar.gz

  # Cafe24 FTP Î∞∞Ìè¨
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: mp-deployment

      - name: Deploy to Cafe24 via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.CAFE24_FTP_SERVER }}
          username: ${{ secrets.CAFE24_FTP_USERNAME }}
          password: ${{ secrets.CAFE24_FTP_PASSWORD }}
          local-dir: ./
          server-dir: /public_html/mp/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.env
            **/README.md
            **/composer.*

      - name: Post-deployment health check
        run: |
          echo "Waiting for deployment to complete..."
          sleep 30
          
          # Ìó¨Ïä§ Ï≤¥ÌÅ¨ (ÏÑ†ÌÉùÏÇ¨Ìï≠)
          curl -f http://gukho.net/mp/health.php || echo "Health check failed, but deployment may still be successful"

      - name: Send deployment notification
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üåê Site URL: http://gukho.net/mp/"
          echo "üìä Health Check: http://gukho.net/mp/health.php" 